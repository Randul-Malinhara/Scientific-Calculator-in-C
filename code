#include<stdio.h>
#include<graphics.h>
#include<math.h>
#include<conio.h>

void graphics();
void text();

// Function to draw the Cartesian Plane
void drawAxes(int midX, int midY) {
    setcolor(WHITE);

    // Draw X-axis
    line(0, midY, getmaxx(), midY);

    // Draw Y-axis
    line(midX, 0, midX, getmaxy());

    // Mark units on the axes
    for (int x = midX; x < getmaxx(); x += 20) putpixel(x, midY, WHITE);
    for (int x = midX; x > 0; x -= 20) putpixel(x, midY, WHITE);
    for (int y = midY; y < getmaxy(); y += 20) putpixel(midX, y, WHITE);
    for (int y = midY; y > 0; y -= 20) putpixel(midX, y, WHITE);
}

// Function to plot the graph of y = f(x)
void plotGraph(int midX, int midY, float (*func)(float)) {
    float scale = 20; // Scale for units
    int prevX = -1, prevY = -1;

    for (float x = -10; x <= 10; x += 0.1) {
        float y = func(x);

        // Map real-world coordinates to pixel coordinates
        int pixelX = midX + (int)(x * scale);
        int pixelY = midY - (int)(y * scale);

        if (prevX != -1 && prevY != -1) {
            // Draw a line between consecutive points for smoothness
            line(prevX, prevY, pixelX, pixelY);
        }

        prevX = pixelX;
        prevY = pixelY;
    }
}

// Example functions
float square(float x) {
    return x * x;
}

float sine(float x) {
    return sin(x);
}

float cosine(float x) {
    return cos(x);
}

// Main function
int main() {
    int gd = DETECT, gm;
    initgraph(&gd, &gm, "C:\\TURBOC3\\BGI");

    int midX = getmaxx() / 2;
    int midY = getmaxy() / 2;

    setbkcolor(BLACK);
    cleardevice();

    // Draw the axes
    drawAxes(midX, midY);

    // User choice
    int choice;
    printf("Choose a function to plot:\n");
    printf("1. y = x^2\n2. y = sin(x)\n3. y = cos(x)\n");
    scanf("%d", &choice);

    // Plot the chosen graph
    setcolor(GREEN);
    if (choice == 1) {
        plotGraph(midX, midY, square);
    } else if (choice == 2) {
        plotGraph(midX, midY, sine);
    } else if (choice == 3) {
        plotGraph(midX, midY, cosine);
    } else {
        printf("Invalid choice!");
    }

    getch();
    closegraph();
    return 0;
}

void graphics() {
    setbkcolor(BLUE);
    setcolor(8);
    rectangle(0, 0, 160, 423); // Choice list
    setfillstyle(SOLID_FILL, WHITE);
    floodfill(2, 2, 8);
    outtextxy(10, 20, "Choice");
    outtextxy(10, 30, "1.  ADDITION");
    outtextxy(10, 50, "2.  SUBTRACTION");
    outtextxy(10, 70, "3.  MULTIPLICATION");
    outtextxy(10, 90, "4.  DIVISION");
    outtextxy(10, 110, "5.  SQUARE ROOT");
    outtextxy(10, 130, "6.  POWER");
    outtextxy(10, 150, "7.  SQUARE");
    outtextxy(10, 170, "8.  CUBE");
    outtextxy(10, 190, "9.  1/X");
    outtextxy(10, 210, "10. EXPONENT");
    outtextxy(10, 230, "11. FACTORIAL");
    outtextxy(10, 250, "12. PERCENTAGE");
    outtextxy(10, 270, "13. LOG");
    outtextxy(10, 290, "14. REMAINDER");
    outtextxy(10, 310, "15. SIN(x)");
    outtextxy(10, 330, "16. COS(x)");
    outtextxy(10, 350, "17. TAN(x)");
    outtextxy(10, 370, "18. COSEC(x)");
    outtextxy(10, 390, "19. SEC(x)");
    outtextxy(10, 410, "20. COT(x)");

    setcolor(6);
    bar3d(230, 120, 620, 200, 2, 2); // Display Screen
}

void text() {
    int choice, i;
    int a, b;  // For integer-specific operations
    float x, y, result;

    gotoxy(10, 2);
    printf("Enter your choice: ");
    scanf("%d", &choice);

    switch (choice) {
        case 1: // Addition
            printf("Enter X and Y: ");
            scanf("%f %f", &x, &y);
            result = x + y;
            printf("Result: %.2f", result);
            break;

        case 2: // Subtraction
            printf("Enter X and Y: ");
            scanf("%f %f", &x, &y);
            result = x - y;
            printf("Result: %.2f", result);
            break;

        case 3: // Multiplication
            printf("Enter X and Y: ");
            scanf("%f %f", &x, &y);
            result = x * y;
            printf("Result: %.2f", result);
            break;

        case 4: // Division
            printf("Enter X and Y: ");
            scanf("%f %f", &x, &y);
            if (y != 0) {
                result = x / y;
                printf("Result: %.2f", result);
            } else {
                printf("Error: Division by zero.");
            }
            break;

        case 5: // Square Root
            printf("Enter X: ");
            scanf("%f", &x);
            if (x >= 0) {
                result = sqrt(x);
                printf("Result: %.2f", result);
            } else {
                printf("Error: Negative input for square root.");
            }
            break;

        case 6: // Power
            printf("Enter X and Y: ");
            scanf("%f %f", &x, &y);
            result = pow(x, y);
            printf("Result: %.2f", result);
            break;

        case 7: // Square
            printf("Enter X: ");
            scanf("%f", &x);
            result = x * x;
            printf("Result: %.2f", result);
            break;

        case 8: // Cube
            printf("Enter X: ");
            scanf("%f", &x);
            result = x * x * x;
            printf("Result: %.2f", result);
            break;

        case 9: // Reciprocal
            printf("Enter X: ");
            scanf("%f", &x);
            if (x != 0) {
                result = 1 / x;
                printf("Result: %.2f", result);
            } else {
                printf("Error: Division by zero.");
            }
            break;

        case 10: // Exponent
            printf("Enter X: ");
            scanf("%f", &x);
            result = exp(x);
            printf("Result: %.2f", result);
            break;

        case 11: // Factorial
            printf("Enter an integer X: ");
            scanf("%d", &a);
            if (a >= 0) {
                result = 1;
                for (i = 1; i <= a; i++) {
                    result *= i;
                }
                printf("Result: %.0f", result);
            } else {
                printf("Error: Factorial for negative numbers is undefined.");
            }
            break;

        case 12: // Percentage
            printf("Enter X and Y: ");
            scanf("%f %f", &x, &y);
            result = (x * y) / 100;
            printf("Result: %.2f", result);
            break;

        case 13: // Logarithm
            printf("Enter X: ");
            scanf("%f", &x);
            if (x > 0) {
                result = log(x);
                printf("Result: %.2f", result);
            } else {
                printf("Error: Logarithm for non-positive numbers is undefined.");
            }
            break;

        case 14: // Remainder
            printf("Enter integers X and Y: ");
            scanf("%d %d", &a, &b);
            if (b != 0) {
                result = a % b;
                printf("Result: %.0f", result);
            } else {
                printf("Error: Division by zero.");
            }
            break;

        case 15: // Sin
            printf("Enter X (in degrees): ");
            scanf("%f", &x);
            result = sin(x * M_PI / 180);
            printf("Result: %.2f", result);
            break;

        case 16: // Cos
            printf("Enter X (in degrees): ");
            scanf("%f", &x);
            result = cos(x * M_PI / 180);
            printf("Result: %.2f", result);
            break;

        case 17: // Tan
            printf("Enter X (in degrees): ");
            scanf("%f", &x);
            result = tan(x * M_PI / 180);
            printf("Result: %.2f", result);
            break;

        case 18: // Cosec
            printf("Enter X (in degrees): ");
            scanf("%f", &x);
            if (x != 0) {
                result = 1 / sin(x * M_PI / 180);
                printf("Result: %.2f", result);
            } else {
                printf("Error: Division by zero.");
            }
            break;

        case 19: // Sec
            printf("Enter X (in degrees): ");
            scanf("%f", &x);
            result = 1 / cos(x * M_PI / 180);
            printf("Result: %.2f", result);
            break;

        case 20: // Cot
            printf("Enter X (in degrees): ");
            scanf("%f", &x);
            if (tan(x * M_PI / 180) != 0) {
                result = 1 / tan(x * M_PI / 180);
                printf("Result: %.2f", result);
            } else {
                printf("Error: Division by zero.");
            }
            break;

        default:
            printf("Invalid choice. Please try again.");
    }
    getch();
}
